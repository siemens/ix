/*
 * SPDX-FileCopyrightText: 2024 Siemens AG
 *
 * SPDX-License-Identifier: MIT
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { useLayoutEffect, useRef } from 'react';
import sdk from '@stackblitz/sdk';
import {
  createStackblitzConfig,
  fetchSourceFilesFromExample,
} from '../PlaygroundV2/utils';
import useBaseUrl from '@docusaurus/useBaseUrl';
import { TargetFramework } from '../PlaygroundV2/framework-types';

function StackblitzEmbedded(props: {
  exampleName: string;
  height: string;
  framework: TargetFramework;
  version?: string;
}) {
  const embedRef = useRef<HTMLDivElement>();

  const baseUrlAutogenerated = useBaseUrl('/auto-generated');
  const baseUrl = useBaseUrl('/');

  useLayoutEffect(() => {
    const embed = embedRef.current;

    if (!embed) {
      return;
    }

    (async () => {
      const files = await fetchSourceFilesFromExample(
        baseUrlAutogenerated,
        props.exampleName,
        props.framework,
        false
      );

      const project = await createStackblitzConfig({
        baseUrl,
        files,
        framework: props.framework,
        name: props.exampleName,
        version: props.version ?? 'latest',
      });

      sdk
        .embedProject(embed, project.config, {
          clickToLoad: true,
          height: props.height,
          view: 'preview',
          openFile: [project.exampleFile],
        })
        .then((result) => console.log(result))
        .catch((error) => console.error(error));
    })();
  }, []);

  return <div ref={embedRef}></div>;
}

StackblitzEmbedded.displayName = 'StackblitzEmbedded';

export default StackblitzEmbedded;
