/*
 * SPDX-FileCopyrightText: 2024 Siemens AG
 *
 * SPDX-License-Identifier: MIT
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { Listr } from 'listr2';
import path from 'path';
import fs from 'fs-extra';
import rimraf from 'rimraf';
const __root = path.join(__dirname, '../');
const __node_modules = path.join(__root, 'node_modules');
const __static = path.join(__root, 'static');
const __autogenerated = path.join(__static, 'auto-generated');
const __previews = path.join(__autogenerated, 'preview-snippets', 'angular');

type AngularSnippet = Record<string, string>;

const angularSnippets: Record<string, AngularSnippet> = {};

const tasks = new Listr([
  {
    title: 'Collect Angular snippets',
    task: async () => {
      const __angularTestApp = path.join(
        __node_modules,
        'angular-test-app',
        'src',
        'preview-examples'
      );

      const previewNames = fs
        .readdirSync(__angularTestApp)
        .filter((f) => f.endsWith('.ts'))
        .map((f) => f.replace('.ts', ''));

      for (const previewName of previewNames) {
        const tsFile = await fs.readFile(
          path.join(__angularTestApp, `${previewName}.ts`)
        );
        const ts = tsFile.toString();

        angularSnippets[previewName] = {
          [`${previewName}.ts`]: ts,
        };

        const regex = /styleUrls:\s*\[\s*['"]([^'"]+)['"]\s*\]/;
        const match = ts.match(regex);
        if (match) {
          const styleFile = await fs.readFile(
            path.join(__angularTestApp, match[1])
          );

          const style = styleFile.toString();

          angularSnippets[previewName][match[1]] = style;
        }

        const __html = path.join(__angularTestApp, `${previewName}.html`);
        if (fs.existsSync(__html)) {
          const htmlFile = await fs.readFile(
            path.join(__angularTestApp, `${previewName}.html`)
          );
          const html = htmlFile.toString();
          angularSnippets[previewName][`${previewName}.html`] = html;
        }
      }
    },
  },
  {
    title: 'Write Angular snippets',
    task: async () => {
      rimraf.sync(__previews);
      await fs.ensureDir(__previews);
    },
  },
]);

(async () => {
  try {
    await tasks.run();
  } catch (e) {
    console.error(e);
  }
})();
