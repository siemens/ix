/*
 * SPDX-FileCopyrightText: 2024 Siemens AG
 *
 * SPDX-License-Identifier: MIT
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

import type {
  Config,
  JsonDocs,
  OutputTargetCustom,
} from '@stencil/core/internal';
import fs from 'fs/promises';
import path from 'path';

function kebabToCamelCase(str: string): string {
  return str
    .split('-')
    .map((word, index) => {
      if (index === 0) {
        return word.toLowerCase();
      }
      return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();
    })
    .join('');
}

export function storybookOutputTarget(config: {
  dist: string;
}): OutputTargetCustom {
  const outputTarget: OutputTargetCustom = {
    type: 'custom',
    name: 'storybook',
    generator: async (
      { rootDir }: Config,
      compilerCtx: any,
      buildCtx: any,
      docs: JsonDocs
    ) => {
      const storyBookDefine = docs.components
        .map((component) => {
          return `import { defineCustomElement as ${kebabToCamelCase(
            component.tag
          )} } from '@siemens/ix/components/${component.tag}.js';`;
        })
        .join('\n');

      const callDefine = docs.components
        .map((component) => {
          return `${kebabToCamelCase(component.tag)}();`;
        })
        .join('\n');

      const storyBookDefineFile = [
        `// This file is automatically generated by the Stencil output.`,
        `// Do not modify this file!`,
        storyBookDefine,
        callDefine,
      ].join('\n');

      fs.writeFile(path.join(config.dist), storyBookDefineFile);
    },
  };
  return outputTarget;
}
