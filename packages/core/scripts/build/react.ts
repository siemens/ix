/*
 * SPDX-FileCopyrightText: 2024 Siemens AG
 *
 * SPDX-License-Identifier: MIT
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
import { OutputTargetCustom } from '@stencil/core/internal';
import { reactOutputTarget as _reactOutputTarget } from '@stencil/react-output-target';
import fs from 'fs/promises';
import path from 'path';
import { kebabToCamelCase } from './utils';

export interface ReactOutputTargetOptions {
  outDir: string;
  excludeComponents?: string[];
  stencilPackageName?: string;
  esModules?: boolean;
  customElementsDir?: string;
  hydrateModule?: string;
}

/**
 * Custom generator function to create a components.ts file that exports all components.
 */
export function reactOutputTarget(
  config: ReactOutputTargetOptions
): OutputTargetCustom {
  const result = _reactOutputTarget(config);

  const importTemplate = `
/**
 * This file was automatically generated by the Stencil React Output Target.
 * Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
 */

/* eslint-disable */
`;

  const imports: string[] = [];

  return {
    ...result,
    generator: async (generatorConfig, compilerCtx, buildCtx) => {
      buildCtx.components
        .filter(({ tagName, internal }) => {
          if (internal) {
            return false;
          }

          if (!config.excludeComponents) {
            return true;
          }

          return !config.excludeComponents.includes(tagName);
        })
        .forEach(({ tagName }) => {
          const componentName = kebabToCamelCase(tagName);
          imports.push(
            `export { default as ${componentName} } from "./${componentName}";`
          );
        });

      await Promise.all([
        result.generator(generatorConfig, compilerCtx, buildCtx, null),
        fs.writeFile(
          path.join(config.outDir, 'components.ts'),
          [importTemplate, ...imports].join('\n')
        ),
      ]);
    },
  };
}
