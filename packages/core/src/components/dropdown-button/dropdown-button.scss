/*
 * SPDX-FileCopyrightText: 2022 Siemens AG
 *
 * SPDX-License-Identifier: MIT
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
@import 'common-variables';

:host {
  ix-button {
    margin: 0;
  }

  ix-icon-button {
    margin: 0;
  }
}

:host {
  display: inline-block;
  position: relative;
  height: $x-large-space;
  appearance: button;

  .dropdown-button {
    display: block;
    position: relative;
    width: 100%;
  }

  .dropdown-button ix-button {
    display: inline-flex;
    width: 100%;
    justify-content: space-between;
  }

  .button-container {
    display: flex;
    align-items: center;

    > ix-icon {
      margin-right: 0.25rem;
    }
  }

  .triangle {
    position: absolute;
    margin-inline-start: 1.5625rem;
    margin-block-start: -0.4375rem;
    border-right: 0 solid transparent;
    border-left: 4px solid transparent;
    border-top: 0 solid transparent;
    border-bottom: 4px solid;
    color: var(--theme-btn-primary--color);
  }

  .triangle.primary {
    &.ghost {
      color: var(--theme-btn-invisible-primary--color);
    }

    &.outline {
      color: var(--theme-btn-outline-primary--color);
    }

    &.ghost.disabled {
      color: var(--theme-btn-invisible-primary--color--disabled);
    }

    &.outline.disabled {
      color: var(--theme-btn-outline-primary--color--disabled);
    }

    &.disabled {
      color: var(--theme-btn-primary--color--disabled);
    }
  }

  .triangle.secondary {
    &.ghost {
      color: var(--theme-btn-invisible-secondary--color);
    }

    &.outline {
      color: var(--theme-btn-outline-secondary--color);
    }

    &.ghost.disabled {
      color: var(--theme-btn-invisible-secondary--color--disabled);
    }

    &.outline.disabled {
      color: var(--theme-btn-outline-secondary--color--disabled);
    }

    &.disabled {
      color: var(--theme-btn-secondary--color--disabled);
    }
  }

  .hide {
    display: none;
  }

  .dropdown {
    width: auto !important;
    inset: auto !important;
    transform: unset !important;
  }
}

:host([disabled], .disabled) {
  pointer-events: none;
}
