/*
 * SPDX-FileCopyrightText: 2023 Siemens AG
 *
 * SPDX-License-Identifier: MIT
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

@import 'common-variables';
@import 'legacy/mixins/fonts';
@import 'mixins/hover';
@import 'mixins/text-truncation';
@import 'mixins/shadow-dom/component';

@mixin blind($variant: 'insight') {
  :host(.blind-#{$variant}) {
    @if $variant == 'outline' {
      border: solid
        var(--theme-blind--border-thickness)
        var(--theme-blind-base--border-color);
    }

    .blind-header {
      @if $variant == 'outline' {
        background-color: var(--theme-color-ghost);
      } @else {
        background-color: var(--theme-color-#{$variant});
      }

      @if $variant == 'insight' or $variant == 'outline' {
        @include ghost-hover-pressed;
      } @else {
        @include hover {
          background-color: var(--theme-color-#{$variant}--hover);
        }

        @include active {
          background-color: var(--theme-color-#{$variant}--active);
        }
      }
    }

    @if $variant == 'insight' or $variant == 'outline' {
      .blind-header-title-label {
        color: var(--theme-color-std-text);
      }
      .blind-header-title-sublabel {
        color: var(--theme-color-soft-text);
      }
    } @else {
      .blind-header-title-label,
      .blind-header-title-sublabel {
        color: var(--theme-color-#{$variant}--contrast);
      }
    }

    @if $variant == 'outline' {
      border-color: var(--theme-color-soft-bdr);
    } @else {
      background-color: var(--theme-blind-base--background);
    }
  }
}

:host {
  @include ix-component;
  display: flex;
  flex-direction: column;
  border-radius: var(--theme-blind--border-radius);
  overflow: hidden;

  .blind-header-wrapper {
    display: block;
    position: relative;
    width: 100%;
    min-height: 3rem;
    height: 3rem;
    overflow: hidden;
  }

  .blind-header-content {
    display: flex;
    position: relative;
    align-items: center;
    justify-content: flex-start;

    width: 100%;
    height: 100%;
    z-index: 1;

    pointer-events: none;
    padding-left: 0.5rem;
  }

  .blind-header-title {
    display: flex;
    position: relative;
    align-items: center;
    flex-grow: 1;
    flex-shrink: 0;
    margin-right: 1rem;
  }

  .blind-header {
    all: unset;
    @include ellipsis;

    display: block;
    position: absolute;

    top: 0px;
    left: 0px;

    pointer-events: all;

    padding-left: 2.5rem;
    min-height: 3rem;
    height: 3rem;
    width: calc(100% - 2 * var(--theme-blind--border-thickness));
    border: solid var(--theme-blind--border-thickness) transparent;
    border-radius: var(--theme-blind--border-radius)
      var(--theme-blind--border-radius) 0 0;
    cursor: pointer;

    @include focus-visible {
      border-color: var(--theme-color-focus-bdr);
      outline: none;
    }
  }

  .blind-header-title-icon,
  .collapse-icon {
    margin-right: $small-space;
  }

  .blind-header-title-row {
    display: flex;
    flex-grow: 1;
  }

  .blind-header-title-col {
    flex-grow: 1;
    flex-basis: 0;
    display: inline-flex;
    align-items: center;
    min-width: 0;
  }

  .blind-header-title-col:not(:first-of-type) {
    justify-content: flex-end;
  }
  ix-typography {
    flex-grow: 1;
    @include ellipsis;
  }

  .blind-header-title-label {
    @include ellipsis;
    padding-inline-end: 0.5rem;
  }

  .blind-header-title-sublabel {
    @include ellipsis;
    padding-inline: 0.5rem;
  }

  .blind-header-title {
    display: flex;
    align-items: center;
    flex-grow: 1;
    height: 100%;
    min-width: 0;
  }

  .blind-header-labels {
    display: inline-flex;
    flex-grow: 1;
    min-width: 0;
  }

  .blind-content {
    display: block;
    padding: 1rem;
    transition-property: padding;
    transition-duration: $default-time;
    transition-timing-function: ease-in;

    &.hide {
      max-height: 0;
      padding-top: 0px;
      padding-bottom: 0px;
    }
  }

  .header-actions {
    pointer-events: all;
  }
}

$blind-variants: (
  alarm,
  critical,
  info,
  insight,
  neutral,
  notification,
  success,
  warning,
  primary,
  outline
);

@each $variant in $blind-variants {
  @include blind($variant);
}
